#!/bin/bash\n\n# Script para testar configura√ß√£o do Google Cloud TTS\n# Criado para o projeto J.A.R.V.I.S\n\necho \"üåê Testador de Configura√ß√£o Google Cloud TTS\"\necho \"===========================================\"\necho \"\"\n\n# Verificar se est√° na pasta correta\nif [ ! -f \"www/index.html\" ]; then\n    echo \"‚ùå Execute este script na pasta raiz do projeto jarvis\"\n    exit 1\nfi\n\necho \"‚úÖ Pasta do projeto encontrada\"\necho \"\"\n\n# Verificar se os arquivos necess√°rios existem\necho \"üîç Verificando arquivos...\"\n\nfiles_to_check=(\n    \"www/jarvis-google-tts.js\"\n    \"www/test_google_tts.html\"\n    \"www/index.html\"\n    \"GOOGLE_TTS_SETUP_GUIDE.md\"\n    \"CONFIGURACAO_GOOGLE_TTS_PASSO_A_PASSO.md\"\n)\n\nfor file in \"${files_to_check[@]}\"; do\n    if [ -f \"$file\" ]; then\n        echo \"  ‚úÖ $file\"\n    else\n        echo \"  ‚ùå $file (FALTANDO!)\"\n    fi\ndone\n\necho \"\"\n\n# Verificar se Python est√° dispon√≠vel\necho \"üêç Verificando Python...\"\nif command -v python3 &> /dev/null; then\n    echo \"  ‚úÖ Python3 encontrado: $(python3 --version)\"\n    PYTHON_CMD=\"python3\"\nelif command -v python &> /dev/null; then\n    echo \"  ‚úÖ Python encontrado: $(python --version)\"\n    PYTHON_CMD=\"python\"\nelse\n    echo \"  ‚ùå Python n√£o encontrado!\"\n    echo \"     Instale Python para continuar\"\n    exit 1\nfi\n\necho \"\"\n\n# Verificar se a porta 8080 est√° livre\necho \"üîå Verificando porta 8080...\"\nif lsof -Pi :8080 -sTCP:LISTEN -t >/dev/null 2>&1; then\n    echo \"  ‚ö†Ô∏è  Porta 8080 j√° est√° em uso\"\n    echo \"     Tentando matar processo...\"\n    pkill -f \"python.*8080\" 2>/dev/null || true\n    sleep 2\n    if lsof -Pi :8080 -sTCP:LISTEN -t >/dev/null 2>&1; then\n        echo \"  ‚ùå N√£o foi poss√≠vel liberar a porta 8080\"\n        echo \"     Use uma porta diferente ou mate o processo manualmente\"\n        exit 1\n    else\n        echo \"  ‚úÖ Porta 8080 liberada\"\n    fi\nelse\n    echo \"  ‚úÖ Porta 8080 dispon√≠vel\"\nfi\n\necho \"\"\n\n# Fun√ß√£o para iniciar servidor\nstart_server() {\n    echo \"üöÄ Iniciando servidor HTTP na porta 8080...\"\n    cd www\n    $PYTHON_CMD -m http.server 8080 &\n    SERVER_PID=$!\n    cd ..\n    \n    echo \"  üì° Servidor iniciado (PID: $SERVER_PID)\"\n    echo \"  üåê URL Local: http://localhost:8080\"\n    echo \"  üß™ Teste TTS: http://localhost:8080/test_google_tts.html\"\n    \n    # Aguardar servidor inicializar\n    sleep 3\n    \n    # Verificar se servidor est√° rodando\n    if kill -0 $SERVER_PID 2>/dev/null; then\n        echo \"  ‚úÖ Servidor rodando com sucesso!\"\n    else\n        echo \"  ‚ùå Falha ao iniciar servidor\"\n        exit 1\n    fi\n}\n\n# Fun√ß√£o para abrir navegador\nopen_browser() {\n    echo \"\"\n    echo \"üåê Abrindo navegador...\"\n    \n    # Detectar comando para abrir navegador\n    if command -v xdg-open &> /dev/null; then\n        BROWSER_CMD=\"xdg-open\"\n    elif command -v open &> /dev/null; then\n        BROWSER_CMD=\"open\"\n    elif command -v start &> /dev/null; then\n        BROWSER_CMD=\"start\"\n    else\n        echo \"  ‚ö†Ô∏è  Comando para abrir navegador n√£o encontrado\"\n        echo \"     Abra manualmente: http://localhost:8080/test_google_tts.html\"\n        return\n    fi\n    \n    # Abrir p√°gina de teste\n    $BROWSER_CMD \"http://localhost:8080/test_google_tts.html\" 2>/dev/null &\n    \n    # Aguardar um pouco e abrir J.A.R.V.I.S principal\n    sleep 3\n    $BROWSER_CMD \"http://localhost:8080\" 2>/dev/null &\n    \n    echo \"  ‚úÖ Navegador aberto!\"\n}\n\n# Fun√ß√£o para mostrar instru√ß√µes\nshow_instructions() {\n    echo \"\"\n    echo \"üìã PR√ìXIMOS PASSOS:\"\n    echo \"==================\"\n    echo \"\"\n    echo \"1. üîë Configure sua API Key do Google Cloud:\"\n    echo \"   - Siga o guia: CONFIGURACAO_GOOGLE_TTS_PASSO_A_PASSO.md\"\n    echo \"   - URL: https://console.cloud.google.com/\"\n    echo \"\"\n    echo \"2. üß™ Teste na p√°gina que abriu:\"\n    echo \"   - Cole sua API key\"\n    echo \"   - Clique em 'Salvar Chave'\"\n    echo \"   - Teste as vozes\"\n    echo \"\"\n    echo \"3. üéØ Use no J.A.R.V.I.S principal:\"\n    echo \"   - Configura√ß√µes (‚öôÔ∏è) > Google Cloud TTS\"\n    echo \"   - Configure a mesma API key\"\n    echo \"\"\n    echo \"4. ‚èπÔ∏è  Para parar o servidor:\"\n    echo \"   - Pressione Ctrl+C neste terminal\"\n    echo \"   - Ou execute: kill $SERVER_PID\"\n    echo \"\"\n}\n\n# Fun√ß√£o para cleanup\ncleanup() {\n    echo \"\"\n    echo \"üõë Parando servidor...\"\n    if [ ! -z \"$SERVER_PID\" ]; then\n        kill $SERVER_PID 2>/dev/null || true\n        echo \"  ‚úÖ Servidor parado (PID: $SERVER_PID)\"\n    fi\n    echo \"üëã At√© logo!\"\n    exit 0\n}\n\n# Capturar Ctrl+C\ntrap cleanup SIGINT SIGTERM\n\n# Menu principal\necho \"üéØ O que voc√™ quer fazer?\"\necho \"1. üöÄ Iniciar servidor e abrir navegador\"\necho \"2. üìñ Ver guia de configura√ß√£o\"\necho \"3. üîç Verificar status apenas\"\necho \"4. ‚ùå Sair\"\necho \"\"\nread -p \"Escolha uma op√ß√£o (1-4): \" choice\n\ncase $choice in\n    1)\n        start_server\n        open_browser\n        show_instructions\n        echo \"‚è≥ Servidor rodando... Pressione Ctrl+C para parar\"\n        # Manter script rodando\n        while true; do\n            sleep 10\n            # Verificar se servidor ainda est√° rodando\n            if ! kill -0 $SERVER_PID 2>/dev/null; then\n                echo \"‚ùå Servidor parou inesperadamente\"\n                exit 1\n            fi\n        done\n        ;;\n    2)\n        echo \"üìñ Abrindo guia de configura√ß√£o...\"\n        if command -v xdg-open &> /dev/null; then\n            xdg-open \"CONFIGURACAO_GOOGLE_TTS_PASSO_A_PASSO.md\" 2>/dev/null &\n        else\n            echo \"üìÑ Leia o arquivo: CONFIGURACAO_GOOGLE_TTS_PASSO_A_PASSO.md\"\n        fi\n        ;;\n    3)\n        echo \"‚úÖ Verifica√ß√£o conclu√≠da!\"\n        echo \"üìÑ Leia: CONFIGURACAO_GOOGLE_TTS_PASSO_A_PASSO.md\"\n        ;;\n    4)\n        echo \"üëã At√© logo!\"\n        exit 0\n        ;;\n    *)\n        echo \"‚ùå Op√ß√£o inv√°lida\"\n        exit 1\n        ;;\nesac"