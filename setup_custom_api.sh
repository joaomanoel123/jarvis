#!/bin/bash\n\necho \"🔧 Configurador de API Personalizada para J.A.R.V.I.S\"\necho \"=================================================\"\n\n# Cores para output\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nBLUE='\\033[0;34m'\nNC='\\033[0m' # No Color\n\n# Função para imprimir com cores\nprint_success() { echo -e \"${GREEN}✅ $1${NC}\"; }\nprint_error() { echo -e \"${RED}❌ $1${NC}\"; }\nprint_warning() { echo -e \"${YELLOW}⚠️ $1${NC}\"; }\nprint_info() { echo -e \"${BLUE}ℹ️ $1${NC}\"; }\n\n# Verificar se estamos na pasta correta\nif [ ! -f \"www/main-github-pages.js\" ]; then\n    print_error \"Arquivo www/main-github-pages.js não encontrado!\"\n    print_info \"Execute este script na pasta raiz do projeto Jarvis\"\n    exit 1\nfi\n\nprint_info \"Pasta do projeto verificada ✅\"\n\necho \"\"\necho \"🌐 Configuração da API Personalizada\"\necho \"-----------------------------------\"\n\n# Mostrar APIs atuais\necho \"\"\nprint_info \"APIs atualmente configuradas:\"\necho \"\"\ngrep -n \"API_URL\\|jarvis-api\\|jarvis-tdgt\" www/main-github-pages.js | head -5\n\necho \"\"\necho \"📋 Opções de configuração:\"\necho \"1. 🌐 Render.com (*.onrender.com)\"\necho \"2. ▲ Vercel (*.vercel.app)\"\necho \"3. 🟣 Heroku (*.herokuapp.com)\"\necho \"4. 🔧 URL personalizada\"\necho \"5. 📝 Mostrar configuração atual\"\necho \"6. 🔄 Restaurar padrão\"\necho \"7. ❌ Cancelar\"\n\necho \"\"\nread -p \"Escolha uma opção (1-7): \" choice\n\ncase $choice in\n    1)\n        echo \"\"\n        print_info \"Configurando para Render.com...\"\n        read -p \"Digite a URL da sua API no Render (ex: https://meu-jarvis.onrender.com): \" api_url\n        ;;\n    2)\n        echo \"\"\n        print_info \"Configurando para Vercel...\"\n        read -p \"Digite a URL da sua API no Vercel (ex: https://meu-jarvis.vercel.app): \" api_url\n        ;;\n    3)\n        echo \"\"\n        print_info \"Configurando para Heroku...\"\n        read -p \"Digite a URL da sua API no Heroku (ex: https://meu-jarvis.herokuapp.com): \" api_url\n        ;;\n    4)\n        echo \"\"\n        print_info \"Configurando URL personalizada...\"\n        read -p \"Digite a URL completa da sua API: \" api_url\n        ;;\n    5)\n        echo \"\"\n        print_info \"Configuração atual:\"\n        echo \"\"\n        grep -A 2 -B 2 \"API_URL.*=\" www/main-github-pages.js\n        echo \"\"\n        exit 0\n        ;;\n    6)\n        echo \"\"\n        print_info \"Restaurando configuração padrão...\"\n        api_url=\"https://jarvis-tdgt.onrender.com\"\n        ;;\n    7)\n        print_info \"Operação cancelada\"\n        exit 0\n        ;;\n    *)\n        print_error \"Opção inválida!\"\n        exit 1\n        ;;\nesac\n\n# Validar URL\nif [[ ! $api_url =~ ^https?:// ]]; then\n    print_error \"URL deve começar com http:// ou https://\"\n    exit 1\nfi\n\n# Remover barra final se houver\napi_url=${api_url%/}\n\necho \"\"\nprint_info \"Testando conexão com a API...\"\n\n# Testar se a API está acessível\nif command -v curl &> /dev/null; then\n    echo \"🔄 Testando: $api_url/health\"\n    \n    if curl -s --max-time 10 \"$api_url/health\" > /dev/null 2>&1; then\n        print_success \"API está acessível!\"\n    else\n        print_warning \"Não foi possível acessar $api_url/health\"\n        print_info \"Isso pode ser normal se o endpoint /health não existir\"\n        \n        echo \"\"\n        read -p \"Deseja continuar mesmo assim? (s/N): \" continue_anyway\n        if [[ ! $continue_anyway =~ ^[Ss]$ ]]; then\n            print_info \"Operação cancelada\"\n            exit 0\n        fi\n    fi\nelse\n    print_warning \"curl não encontrado, pulando teste de conectividade\"\nfi\n\necho \"\"\nprint_info \"Aplicando configuração...\"\n\n# Backup do arquivo original\ncp www/main-github-pages.js www/main-github-pages.js.backup\nprint_info \"Backup criado: www/main-github-pages.js.backup\"\n\n# Atualizar a URL da API no arquivo\nif [[ \"$OSTYPE\" == \"darwin\"* ]]; then\n    # macOS\n    sed -i '' \"s|'https://jarvis-api-joao-manoel.onrender.com'|'$api_url'|g\" www/main-github-pages.js\n    sed -i '' \"s|'https://jarvis-tdgt.onrender.com'|'$api_url'|g\" www/main-github-pages.js\nelse\n    # Linux\n    sed -i \"s|'https://jarvis-api-joao-manoel.onrender.com'|'$api_url'|g\" www/main-github-pages.js\n    sed -i \"s|'https://jarvis-tdgt.onrender.com'|'$api_url'|g\" www/main-github-pages.js\nfi\n\nprint_success \"Configuração aplicada!\"\n\necho \"\"\nprint_info \"Verificando mudanças...\"\necho \"\"\ngrep -n \"API_URL\\|$api_url\" www/main-github-pages.js | head -3\n\necho \"\"\nprint_success \"✅ API configurada com sucesso!\"\necho \"\"\nprint_info \"📋 Resumo:\"\necho \"   • URL da API: $api_url\"\necho \"   • Arquivo modificado: www/main-github-pages.js\"\necho \"   • Backup salvo em: www/main-github-pages.js.backup\"\n\necho \"\"\nprint_info \"🚀 Próximos passos:\"\necho \"   1. Teste a configuração localmente\"\necho \"   2. Faça commit das mudanças:\"\necho \"      git add www/main-github-pages.js\"\necho \"      git commit -m '🔧 Configure custom API: $api_url'\"\necho \"   3. Faça push para GitHub:\"\necho \"      git push origin main\"\necho \"   4. Aguarde o deploy (1-2 minutos)\"\necho \"   5. Teste no GitHub Pages\"\n\necho \"\"\nread -p \"Deseja fazer commit automaticamente? (s/N): \" auto_commit\nif [[ $auto_commit =~ ^[Ss]$ ]]; then\n    print_info \"Fazendo commit...\"\n    \n    git add www/main-github-pages.js\n    git commit -m \"🔧 Configure custom API: $api_url\"\n    \n    print_success \"Commit realizado!\"\n    \n    echo \"\"\n    read -p \"Deseja fazer push para GitHub? (s/N): \" auto_push\n    if [[ $auto_push =~ ^[Ss]$ ]]; then\n        print_info \"Fazendo push...\"\n        \n        if git push origin main; then\n            print_success \"Push realizado com sucesso!\"\n            print_info \"🌐 Aguarde 1-2 minutos para o deploy no GitHub Pages\"\n            print_info \"🔗 Teste em: https://$(git config --get remote.origin.url | sed 's/.*github.com[:\\/]\\([^.]*\\).*/\\1/').github.io/jarvis\"\n        else\n            print_error \"Erro no push. Verifique sua conexão e permissões.\"\n        fi\n    fi\nfi\n\necho \"\"\nprint_info \"🔧 Para reverter as mudanças:\"\necho \"   cp www/main-github-pages.js.backup www/main-github-pages.js\"\n\necho \"\"\nprint_success \"Configuração concluída! 🎉\""